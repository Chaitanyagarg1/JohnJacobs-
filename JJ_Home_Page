import random
import allure
import allurereports
import allure_pytest
import select
import time
from allure_commons.types import AttachmentType
import pytest
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
from allurereports.conftest import *
from selenium.webdriver.common.keys import Keys



class Test_Collection_Filter:

    mens_collection_url="https://www.johnjacobseyewear.com/collections/eyeglasses-for-men"
    #
    # @allure.severity(allure.severity_level.NORMAL)
    # @allure.step("Verifying the Frame shapes filters  ")
    # @allure.description("Verifying the Filters Functionality")
    # @allure.story("Verifying and checking filters")
    # @allure.testcase(mens_collection_url, name="shop for men collection")
    # def test_frame_shape_filter(self):
    #     url = "https://www.johnjacobseyewear.com"
    #     driver = start_browser()
    #     driver.get(url)
    #     time.sleep(5)
    #     # / Selecting Navigation Bar /#
    #
    #     driver.find_element(By.XPATH, "//div[@class='utm_bottom_text popup_time_close_skip skip-top']").click()
    #
    #     driver.find_element(By.XPATH, "//ul[@class='navigation_menu_bar']//li[2]//span[1]").click()
    #     time.sleep(2)
    #     # /Selecting EyeGlasses Collection For Men / #
    #
    #     shop_men_coll = driver.find_element(By.XPATH, "//img[@alt='eyeglasses men']")
    #     shop_men_coll.click()
    #     time.sleep(2)
    #     actual_title = driver.title
    #
    #     if actual_title == "Premium Eyeglasses For Men At Unbeatable Prices - John Jacobs Eyewear":
    #         print(actual_title,"Valid Page Title")
    #         assert True
    #     else:
    #         print(actual_title,"Invalid Page Title")
    #         driver.quit()
    #         assert False
    #
    #     # / Selecting Prescription Filter On Men Collection Page /#
    #
    #     drop_down_arrow = driver.find_element(By.XPATH, "//span[normalize-space()='shape']")
    #     drop_down_arrow.click()
    #     time.sleep(2)
    #
    #     frame_shape = driver.find_elements(By.CSS_SELECTOR,"ul.shape li.shape")
    #     for i in frame_shape:
    #         i.click()
    #         frame_shape_text = i.get_attribute("data-filter")
    #         time.sleep(5)
    #         scroll_to_end_page = driver.find_element(By.TAG_NAME, "html")
    #         scroll_to_end_page.send_keys(Keys.END)
    #         time.sleep(5)
    #         frame_shape_elements = driver.find_elements(By.XPATH,"//div[@class='main_content']/div[@class]")
    #         for j in frame_shape_elements:
    #             product_shape = j.get_attribute("product-shape")
    #             if product_shape == i.text or product_shape == frame_shape_text:
    #                 assert True
    #             else:
    #                 print(product_shape , "Shape Not Found")
    #                 break
    #
    #         if i.text == frame_shape_text or i.text == "Cat Eye":
    #             driver.execute_script("arguments[0].scrollIntoView();", drop_down_arrow)
    #             time.sleep(5)
    #             i.click()
    #             print(i.text," Shape Found")
    #
    #         else:
    #             allure.attach(driver.get_screenshot_as_png(), name=i.text + " Not Found",
    #                           attachment_type=AttachmentType.PNG, )
    #             driver.close()
    #             assert False
    #
    #     driver.close()

    # @allure.severity(allure.severity_level.CRITICAL)
    # @allure.step("Verifying the Frame Types filters  ")
    # @allure.description("Verifying the Filters Functionality")
    # @allure.story("Verifying and checking filters")
    # @allure.testcase(mens_collection_url,name="Shop For Men Collection")
    # def test_frame_type(self):
    #
    #     url = "https://www.johnjacobseyewear.com"
    #     driver = start_browser()
    #     driver.get(url)
    #     time.sleep(5)
    #
    #     # / Selecting Navigation Bar /#
    #
    #     driver.find_element(By.XPATH, "//div[@class='utm_bottom_text popup_time_close_skip skip-top']").click()
    #     time.sleep(5)
    #
    #     driver.find_element(By.XPATH, "//ul[@class='navigation_menu_bar']//li[2]//span[1]").click()
    #     time.sleep(1)
    #     # /Selecting EyeGlasses Collection For Men / #
    #
    #     shop_men_coll = driver.find_element(By.XPATH, "//img[@alt='eyeglasses men']")
    #     shop_men_coll.click()
    #     time.sleep(2)
    #
    #     # # / Selecting Prescription Filter On Men Collection Page /#
    #
    #     drop_down_arrow = driver.find_element(By.XPATH, "//span[normalize-space()='Frame Type']")
    #     drop_down_arrow.click()
    #     time.sleep(2)
    #
    #     frame_type= driver.find_elements(By.CSS_SELECTOR, "ul.frametype li.frametype")
    #     for i in frame_type:
    #         i.click()
    #         frame_type_name = i.get_attribute("data-filter")
    #         time.sleep(5)
    #         scroll_to_end_page = driver.find_element(By.TAG_NAME, "html")
    #         scroll_to_end_page.send_keys(Keys.END)
    #         time.sleep(5)
    #         frame_type_elements = driver.find_elements(By.XPATH, "//div[@class='main_content']/div[@class]")
    #         for j in frame_type_elements:
    #             product_frame_type = j.get_attribute("data-frame-type")
    #             if product_frame_type == frame_type_name or product_frame_type==i.text:
    #                 assert True
    #             else:
    #                 print(product_frame_type, "Frame Type Not Found")
    #                 break
    #
    #         if i.text in ["Full Rim","Half Rim","Rimless"]:
    #             driver.execute_script("arguments[0].scrollIntoView();", drop_down_arrow)
    #             time.sleep(5)
    #             i.click()
    #             print(i.text,"Frame Type Found")
    #             assert True
    #
    #         else:
    #             allure.attach(driver.get_screenshot_as_png(), name=i.text + " not found",
    #                           attachment_type=AttachmentType.PNG, )
    #             driver.close()
    #             assert False
    #
    #     driver.close()

    # @allure.severity(allure.severity_level.CRITICAL)
    # @allure.step("Verifying the Frame sizes filters  ")
    # @allure.description("Verifying the Filters Functionality")
    # @allure.story("Verifying and checking filters")
    # @allure.testcase(mens_collection_url, name="shop for men collection")
    # def test_frame_size(self):
    #
    #     url = "https://www.johnjacobseyewear.com"
    #     driver = start_browser()
    #     driver.get(url)
    #     time.sleep(5)
    #     # / Selecting Navigation Bar /#
    #
    #     driver.find_element(By.XPATH, "//div[@class='utm_bottom_text popup_time_close_skip skip-top']").click()
    #
    #     driver.find_element(By.XPATH, "//ul[@class='navigation_menu_bar']//li[2]//span[1]").click()
    #     time.sleep(1)
    #     # /Selecting EyeGlasses Collection For Men / #
    #
    #     shop_men_coll = driver.find_element(By.XPATH,"//img[@alt='eyeglasses men']")
    #     shop_men_coll.click()
    #     time.sleep(2)
    #
    #     # / Selecting Prescription Filter On Men Collection Page /#
    #
    #     drop_down_arrow = driver.find_element(By.XPATH, "//span[normalize-space()='size']")
    #     drop_down_arrow.click()
    #     time.sleep(2)
    #
    #     frame_type = driver.find_elements(By.CSS_SELECTOR, "ul.size li.size")
    #     for filter_click in frame_type:
    #         filter_click.click()
    #         time.sleep(6)
    #         scroll_to_end_page= driver.find_element(By.TAG_NAME, "html")
    #         scroll_to_end_page.send_keys(Keys.END)
    #         time.sleep(5)
    #         # driver.execute_script("window.scrollBy(0,document.body.scrollHeight)")
    #         frame_type_elements = driver.find_elements(By.XPATH, "//div[@class='main_content']/div[@class]")
    #         for filter_value in frame_type_elements:
    #             frame_size = filter_value.get_attribute("size")
    #             product_frame_size = filter_value.get_attribute("product-framesize")
    #             frame_size_list= product_frame_size.split("-")
    #             if (int(frame_size_list[-1])) in range(125,130) and frame_size == "Extra Narrow":
    #                 assert True
    #             elif (int(frame_size_list[-1])) in range(130,134) and frame_size == "Narrow":
    #                 assert True
    #             elif (int(frame_size_list[-1])) in range(134,138) and frame_size == "Medium":
    #                 assert True
    #             elif (int(frame_size_list[-1])) in range(138,142) and frame_size == "Wide":
    #                 assert True
    #             elif (int(frame_size_list[-1])) in range(142,150) and frame_size == "Extra Wide":
    #                 assert True
    #             else:
    #                 print(frame_size_list, frame_size,"Not Found")
    #                 allure.attach(driver.get_screenshot_as_png() , name=frame_size + " not found",
    #                               attachment_type=AttachmentType.PNG,)
    #                 driver.close()
    #                 break
    #         driver.execute_script("arguments[0].scrollIntoView();", drop_down_arrow)
    #         time.sleep(5)
    #         filter_click.click()
    #
    #     driver.close()
    #
